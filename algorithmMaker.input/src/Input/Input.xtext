grammar algorithmMaker.Input with org.eclipse.xtext.common.Terminals

generate input "http://www.Input"

//TODO: Sugar: math signs, comparators
//TODO: Sugar: implies "->, <-, <->" : relies on inline declarations?
//TODO: Nested atomics??

//NOTE: Any changes to the formatting should be reflected with changes here.
Input:
	'Given' given=Problem ',' 'Find' goal=Problem (';' "Theorems:" theorems+=Theorem (';' theorems+=Theorem)* ';'?)?;

Problem:
	((vars+=ID) (',' vars+=ID)*) 'st' property=ORing;

ORing returns Property:
	ANDing ({ORing.left=current} '|' right=ANDing)*;

ANDing returns Property:
	Primary ({ANDing.left=current} '&' right=Primary)*;

Primary returns Property:
	Atomic | Quantifier | ('(' ORing ')') | BooleanLiteral;

Quantifier:
	quantifier=('forall' | 'exists') '(' subject=Problem ':' predicate=ORing ')';

	//TODO:DN: Worry about TRUE and FALSE atomics
Atomic:
	Function=ID ('(' (args+=ID (',' args+=ID)*)? ')')?;

BooleanLiteral:
	value=("TRUE" | "FALSE");

Theorem:
	Requirement=ORing ":-" Result=ORing ',' Cost=INT ',' Description=STRING (',' PseudoCode=STRING)?;