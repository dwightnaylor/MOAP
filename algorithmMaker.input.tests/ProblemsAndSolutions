Given list<int> a, b; Find !child(a,b)
boolean v0 = true;
foreach child nb of a
	if b == nb
		v0 = false
if v0 == true
	return []
-
Given list<int> a; Find b st child(a,b) & even(b)
foreach child b of a
	if b % 2 == 0
		return [b]
-
Given int a, int b, int c; Find plus(c,b,a)
if c + b == a
	return []
-
Given array x; Find y st index(x,y) & equal(get(x,y),y)
foreach index y of x
	na = x[y]
	if y == na
		return [y]
-
Given list a, list b; Find c st child(a,c) & !child(b,c)
na = new HashSet(b)
foreach child c of a
	if !na.contains(c)
		return [c]
-
Given a,b; Find s st plus(a,b,s)
s = a + b
return [s]
-
Given hashset a, hashset b; Find d st child(a,d) & !child(b,d)
foreach child d of a
	if !b.contains(d)
		return [d]
-
Given array<number> A; Find y st child(A,y) & forall(z st child(A,z): lessThanEqual(z,y))
y = null;
foreach child z of A
	if y == null
		y = z
	if z <= y
		y = z
return [y]
-
Given list<number> x,int s,b st child(x,b); Find a st child(x,a) & equal(a+b,s)
foreach child a of x
	na = a + b
	if s == na
		return [a]
-
Given a,b; Find c st plus(a,b,c)
c = a + b
return [c]