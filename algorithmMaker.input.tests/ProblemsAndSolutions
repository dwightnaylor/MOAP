Given list<int> a; Find b st child(a,b) & even(b)
foreach child b of a
	if b % 2 == 0
		return [b]
-
Given list<int> a,list<int> b; Find c st child(a,c) & child(b,c) & even(c)
foreach child c of a
	boolean v0 = true;
	foreach child nb of b
		if c == nb
			v0 = false
	if v0 == false
		if c % 2 == 0
			return [c]
-
Given int a, int b, int c; Find plus(c,b,a)
if c + b == a
	return []
-
Given array x; Find y st index(x,y) & equal(get(x,y),y)
foreach index y of x
	na = x[y]
	if y == na
		return [y]
-
Given list x; Find y,z st child(x,y) & child(x,z) & equal(y,z)
foreach child y of x
	foreach child z of x
		if y == z
			return [y, z]
-
Given list a, list b; Find c st child(a,c) & !child(b,c)
foreach child c of a
	boolean v12 = true;
	foreach child na of b
		if c == na
			v12 = false
	if v12 == true
		return [c]
-
Given list a, list b, list c; Find d st child(a,d) & child(b,d) & !child(c,d)
foreach child d of a
	boolean v15 = true;
	foreach child na of c
		if d == na
			v15 = false
	if v15 == true
		boolean v42 = true;
		foreach child nb of b
			if d == nb
				v42 = false
		if v42 == false
			return [d]
-
Given a,b; Find s st plus(a,b,s)
s = a + b
return [s]
-
Given hashset a, hashset b; Find d st child(a,d) & !child(b,d)
foreach child d of a
	if !b.contains(d)
		return [d]
-
Given array<number> A; Find y st child(A,y) & forall(z st child(A,z): lessThanEqual(z,y))
y = null;
foreach child z of A
	if y == null
		y = z
	if z <= y
		y = z
return [y]
-
Given list<number> x, int s; Find a,b st child(x,a) & child(x,b) & equal(a+b,s)
foreach child b of x
	foreach child a of x
		na = a + b
		if s == na
			return [a, b]
-
